{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.upload = upload;\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _click = require(\"./click\");\n\nvar _blur = require(\"./blur\");\n\nvar _focus = require(\"./focus\");\n\nfunction upload(element, fileOrFiles, init) {\n  if (element.disabled) return;\n  let files;\n  let input = element;\n  (0, _click.click)(element, init);\n\n  if (element.tagName === 'LABEL') {\n    files = element.control.multiple ? fileOrFiles : [fileOrFiles];\n    input = element.control;\n  } else {\n    files = element.multiple ? fileOrFiles : [fileOrFiles];\n  } // blur fires when the file selector pops up\n\n\n  (0, _blur.blur)(element, init); // focus fires when they make their selection\n\n  (0, _focus.focus)(element, init); // the event fired in the browser isn't actually an \"input\" or \"change\" event\n  // but a new Event with a type set to \"input\" and \"change\"\n  // Kinda odd...\n\n  const inputFiles = {\n    length: files.length,\n    item: index => files[index],\n    ...files\n  };\n  (0, _dom.fireEvent)(input, (0, _dom.createEvent)('input', input, {\n    target: {\n      files: inputFiles\n    },\n    bubbles: true,\n    cancelable: false,\n    composed: true,\n    ...init\n  }));\n\n  _dom.fireEvent.change(input, {\n    target: {\n      files: inputFiles\n    },\n    ...init\n  });\n}","map":{"version":3,"sources":["/Users/surendrapratapsingh/Desktop/MERNBootCamp/projfrontend/node_modules/@testing-library/user-event/dist/upload.js"],"names":["Object","defineProperty","exports","value","upload","_dom","require","_click","_blur","_focus","element","fileOrFiles","init","disabled","files","input","click","tagName","control","multiple","blur","focus","inputFiles","length","item","index","fireEvent","createEvent","target","bubbles","cancelable","composed","change"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,MAAR,GAAiBA,MAAjB;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,sBAAD,CAAlB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIE,KAAK,GAAGF,OAAO,CAAC,QAAD,CAAnB;;AAEA,IAAIG,MAAM,GAAGH,OAAO,CAAC,SAAD,CAApB;;AAEA,SAASF,MAAT,CAAgBM,OAAhB,EAAyBC,WAAzB,EAAsCC,IAAtC,EAA4C;AAC1C,MAAIF,OAAO,CAACG,QAAZ,EAAsB;AACtB,MAAIC,KAAJ;AACA,MAAIC,KAAK,GAAGL,OAAZ;AACA,GAAC,GAAGH,MAAM,CAACS,KAAX,EAAkBN,OAAlB,EAA2BE,IAA3B;;AAEA,MAAIF,OAAO,CAACO,OAAR,KAAoB,OAAxB,EAAiC;AAC/BH,IAAAA,KAAK,GAAGJ,OAAO,CAACQ,OAAR,CAAgBC,QAAhB,GAA2BR,WAA3B,GAAyC,CAACA,WAAD,CAAjD;AACAI,IAAAA,KAAK,GAAGL,OAAO,CAACQ,OAAhB;AACD,GAHD,MAGO;AACLJ,IAAAA,KAAK,GAAGJ,OAAO,CAACS,QAAR,GAAmBR,WAAnB,GAAiC,CAACA,WAAD,CAAzC;AACD,GAXyC,CAWxC;;;AAGF,GAAC,GAAGH,KAAK,CAACY,IAAV,EAAgBV,OAAhB,EAAyBE,IAAzB,EAd0C,CAcV;;AAEhC,GAAC,GAAGH,MAAM,CAACY,KAAX,EAAkBX,OAAlB,EAA2BE,IAA3B,EAhB0C,CAgBR;AAClC;AACA;;AAEA,QAAMU,UAAU,GAAG;AACjBC,IAAAA,MAAM,EAAET,KAAK,CAACS,MADG;AAEjBC,IAAAA,IAAI,EAAEC,KAAK,IAAIX,KAAK,CAACW,KAAD,CAFH;AAGjB,OAAGX;AAHc,GAAnB;AAKA,GAAC,GAAGT,IAAI,CAACqB,SAAT,EAAoBX,KAApB,EAA2B,CAAC,GAAGV,IAAI,CAACsB,WAAT,EAAsB,OAAtB,EAA+BZ,KAA/B,EAAsC;AAC/Da,IAAAA,MAAM,EAAE;AACNd,MAAAA,KAAK,EAAEQ;AADD,KADuD;AAI/DO,IAAAA,OAAO,EAAE,IAJsD;AAK/DC,IAAAA,UAAU,EAAE,KALmD;AAM/DC,IAAAA,QAAQ,EAAE,IANqD;AAO/D,OAAGnB;AAP4D,GAAtC,CAA3B;;AAUAP,EAAAA,IAAI,CAACqB,SAAL,CAAeM,MAAf,CAAsBjB,KAAtB,EAA6B;AAC3Ba,IAAAA,MAAM,EAAE;AACNd,MAAAA,KAAK,EAAEQ;AADD,KADmB;AAI3B,OAAGV;AAJwB,GAA7B;AAMD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.upload = upload;\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _click = require(\"./click\");\n\nvar _blur = require(\"./blur\");\n\nvar _focus = require(\"./focus\");\n\nfunction upload(element, fileOrFiles, init) {\n  if (element.disabled) return;\n  let files;\n  let input = element;\n  (0, _click.click)(element, init);\n\n  if (element.tagName === 'LABEL') {\n    files = element.control.multiple ? fileOrFiles : [fileOrFiles];\n    input = element.control;\n  } else {\n    files = element.multiple ? fileOrFiles : [fileOrFiles];\n  } // blur fires when the file selector pops up\n\n\n  (0, _blur.blur)(element, init); // focus fires when they make their selection\n\n  (0, _focus.focus)(element, init); // the event fired in the browser isn't actually an \"input\" or \"change\" event\n  // but a new Event with a type set to \"input\" and \"change\"\n  // Kinda odd...\n\n  const inputFiles = {\n    length: files.length,\n    item: index => files[index],\n    ...files\n  };\n  (0, _dom.fireEvent)(input, (0, _dom.createEvent)('input', input, {\n    target: {\n      files: inputFiles\n    },\n    bubbles: true,\n    cancelable: false,\n    composed: true,\n    ...init\n  }));\n\n  _dom.fireEvent.change(input, {\n    target: {\n      files: inputFiles\n    },\n    ...init\n  });\n}"]},"metadata":{},"sourceType":"script"}