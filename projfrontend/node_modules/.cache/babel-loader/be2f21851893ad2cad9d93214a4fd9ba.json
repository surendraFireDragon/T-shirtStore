{"ast":null,"code":"import { API } from \"../../backend\";\nimport React from 'react';\nexport const createCategory = (userId, token, category) => {\n  return fetch(`${API}/category/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json;\n  }).catch(err => console.log(err));\n}; //get ALL categories\n\nexport const getCategories = () => {\n  return fetch(`${API}/categories`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json;\n  }).catch(err => {\n    console.log(\"Eror for getting all categories\");\n  });\n}; // product calls\n\nexport const createProduct = (userId, token, product) => {\n  return fetch(`${API}/product/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json;\n  }).catch(err => {\n    console.log(\"Error creating the product\");\n  });\n};","map":{"version":3,"sources":["/Users/surendrapratapsingh/Desktop/MERNBootCamp/projfrontend/src/admin/helper/adminapicall.js"],"names":["API","React","createCategory","userId","token","category","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","getCategories","createProduct","product"],"mappings":"AAAA,SAASA,GAAT,QAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,MAAD,EAASC,KAAT,EAAgBC,QAAhB,KAA6B;AACvD,SAAOC,KAAK,CAAE,GAAEN,GAAI,oBAAmBG,MAAO,EAAlC,EAAoC;AAC5CI,IAAAA,MAAM,EAAG,MADmC;AAE5CC,IAAAA,OAAO,EAAG;AACNC,MAAAA,MAAM,EAAG,kBADH;AAEN,sBAAiB,kBAFX;AAGNC,MAAAA,aAAa,EAAI,UAASN,KAAM;AAH1B,KAFkC;AAO5CO,IAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAeR,QAAf;AAPqC,GAApC,CAAL,CASNS,IATM,CASAC,QAAQ,IAAG;AACd,WAAOA,QAAQ,CAACC,IAAhB;AACH,GAXM,EAYNC,KAZM,CAYAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAZP,CAAP;AAaH,CAdM,C,CAiBP;;AAEA,OAAO,MAAMG,aAAa,GAAG,MAAK;AAC9B,SAAOf,KAAK,CAAE,GAAEN,GAAI,aAAR,EAAqB;AAC7BO,IAAAA,MAAM,EAAG;AADoB,GAArB,CAAL,CAGNO,IAHM,CAGDC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAhB;AACH,GALM,EAMNC,KANM,CAMAC,GAAG,IAAG;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH,GARM,CAAP;AASH,CAVM,C,CAYP;;AACA,OAAO,MAAME,aAAa,GAAG,CAACnB,MAAD,EAASC,KAAT,EAAgBmB,OAAhB,KAA2B;AACpD,SAAOjB,KAAK,CAAE,GAAEN,GAAI,mBAAkBG,MAAO,EAAjC,EAAmC;AAC3CI,IAAAA,MAAM,EAAG,MADkC;AAE3CC,IAAAA,OAAO,EAAG;AACNC,MAAAA,MAAM,EAAG,kBADH;AAENC,MAAAA,aAAa,EAAI,UAASN,KAAM;AAF1B,KAFiC;AAM3CO,IAAAA,IAAI,EAAGY;AANoC,GAAnC,CAAL,CAQNT,IARM,CAQDC,QAAQ,IAAG;AACb,WAAOA,QAAQ,CAACC,IAAhB;AACH,GAVM,EAWNC,KAXM,CAWAC,GAAG,IAAG;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH,GAbM,CAAP;AAcH,CAfM","sourcesContent":["import { API } from \"../../backend\"\nimport React from 'react'\n\nexport const createCategory = (userId, token, category) => {\n    return fetch(`${API}/category/create/${userId}`,{\n        method : \"POST\",\n        headers : {\n            Accept : \"application/json\",\n            \"Content-Type\" : \"application/json\",\n            Authorization : `Bearer ${token}`\n        },\n        body : JSON.stringify(category)\n    })\n    .then( response =>{\n        return response.json;\n    } )\n    .catch(err => console.log(err))\n};\n\n\n//get ALL categories\n\nexport const getCategories = () =>{\n    return fetch(`${API}/categories`,{\n        method : \"GET\"\n    })\n    .then(response => {\n        return response.json\n    })\n    .catch(err =>{\n        console.log(\"Eror for getting all categories\");\n    })\n}\n\n// product calls\nexport const createProduct = (userId, token, product) =>{\n    return fetch(`${API}/product/create/${userId}`,{\n        method : \"POST\",\n        headers : {\n            Accept : \"application/json\",\n            Authorization : `Bearer ${token}`\n        },\n        body : product\n    })\n    .then(response =>{\n        return response.json;\n    })\n    .catch(err =>{\n        console.log(\"Error creating the product\")\n    })\n}"]},"metadata":{},"sourceType":"module"}