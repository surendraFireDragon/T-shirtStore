{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/surendrapratapsingh/Desktop/MERNBootCamp/projfrontend/src/core/paymentb.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { cartEmpty, loadCart } from './helper/cardHelper';\nimport { getmeToken, processPayment } from './helper/paymentbHelper';\nimport { createOrder } from \"./helper/orderHelper\";\nimport { isAuthenticated } from '../auth/helper';\nimport DropIn from \"braintree-web-drop-in\";\n\nconst Paymentb = (products, setReload = f => f, reload = undefined) => {\n  _s();\n\n  const [info, setInfo] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: \"\"\n  });\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const token = isAuthenticated() && isAuthenticated().token;\n  console.log(\"Hello ................\");\n\n  const getToken = (userId, token) => {\n    getmeToken(userId, token).then(info => {\n      console.log(\"INFORMATION \", info);\n\n      if (info.error) {\n        setInfo({ ...info,\n          error: info.error\n        });\n      } else {\n        const clientToken = info.clientToken;\n        setInfo({\n          clientToken\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Braintree Payment gatways\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Paymentb, \"EkVQRfggOtq4KrFWZEpHUG4EDeg=\");\n\n_c = Paymentb;\nexport default Paymentb;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paymentb\");","map":{"version":3,"sources":["/Users/surendrapratapsingh/Desktop/MERNBootCamp/projfrontend/src/core/paymentb.js"],"names":["React","useState","Link","cartEmpty","loadCart","getmeToken","processPayment","createOrder","isAuthenticated","DropIn","Paymentb","products","setReload","f","reload","undefined","info","setInfo","loading","success","clientToken","error","userId","user","_id","token","console","log","getToken","then","useEffect"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,qBAApC;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,yBAA3C;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAGA,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAYC,SAAS,GAAGC,CAAC,IAAIA,CAA7B,EAAgCC,MAAM,GAAGC,SAAzC,KAAwD;AAAA;;AAErE,QAAM,CAACC,IAAD,EAAQC,OAAR,IAAmBhB,QAAQ,CAAE;AAC/BiB,IAAAA,OAAO,EAAE,KADsB;AAE/BC,IAAAA,OAAO,EAAE,KAFsB;AAG/BC,IAAAA,WAAW,EAAG,IAHiB;AAI/BC,IAAAA,KAAK,EAAE;AAJwB,GAAF,CAAjC;;AAOA,QAAMC,MAAM,GAAGd,eAAe,MAAMA,eAAe,GAAGe,IAAlB,CAAuBC,GAA3D;;AACA,QAAMC,KAAK,GAAIjB,eAAe,MAAMA,eAAe,GAAGiB,KAAtD;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AAEA,QAAMC,QAAQ,GAAG,CAACN,MAAD,EAASG,KAAT,KAAkB;AAC/BpB,IAAAA,UAAU,CAACiB,MAAD,EAASG,KAAT,CAAV,CAA0BI,IAA1B,CAA+Bb,IAAI,IAAG;AAElCU,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BX,IAA5B;;AAEA,UAAGA,IAAI,CAACK,KAAR,EAAc;AACVJ,QAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUK,UAAAA,KAAK,EAAEL,IAAI,CAACK;AAAtB,SAAD,CAAP;AACH,OAFD,MAEK;AACD,cAAMD,WAAW,GAAGJ,IAAI,CAACI,WAAzB;AACAH,QAAAA,OAAO,CAAC;AAAEG,UAAAA;AAAF,SAAD,CAAP;AACH;AACJ,KAVD;AAYH,GAbD;;AAcAU,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,QAAQ,CAACN,MAAD,EAAQG,KAAR,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArCD;;GAAMf,Q;;KAAAA,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { cartEmpty, loadCart } from './helper/cardHelper'\nimport { getmeToken, processPayment } from './helper/paymentbHelper'\nimport { createOrder } from \"./helper/orderHelper\"\nimport { isAuthenticated } from '../auth/helper'\nimport DropIn from \"braintree-web-drop-in\"\n\n\nconst Paymentb = (products , setReload = f => f, reload = undefined ) => {\n\n    const [info , setInfo] = useState ({\n        loading: false,\n        success: false,\n        clientToken : null,\n        error: \"\"\n    })\n\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token =  isAuthenticated() && isAuthenticated().token;\n\n    console.log(\"Hello ................\");\n\n    const getToken = (userId, token) =>{\n        getmeToken(userId, token).then(info =>{\n\n            console.log(\"INFORMATION \", info);\n\n            if(info.error){\n                setInfo({...info, error: info.error})\n            }else{\n                const clientToken = info.clientToken;\n                setInfo({ clientToken });\n            }\n        })\n\n    }\n    useEffect(() => {\n        getToken(userId,token);\n    }, [])\n\n    return (\n        <div>\n            <h2>Braintree Payment gatways</h2>\n        </div>\n    )\n}\nexport default Paymentb"]},"metadata":{},"sourceType":"module"}